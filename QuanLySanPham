using De02.Model;
using System;
using System.Linq;
using System.Windows.Forms;

namespace De02
{
    public partial class QuanLySanham : Form
    {
        private SanPhamModel db = new SanPhamModel();
        private BindingSource bindingSource = new BindingSource();

        public QuanLySanham()
        {
            InitializeComponent();
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            LoadLoaiSP();
            dgvSanPham.AutoGenerateColumns = false;
            LoadData();
        }

        private void LoadData()
        {
            bindingSource.Clear(); 
            dgvSanPham.DataSource = null; 

            using (var context = new SanPhamModel())
            {
                var sanphamList = (from sp in context.Sanphams
                                   join loai in context.LoaiSPs on sp.MaLoai equals loai.MaLoai
                                   select new
                                   {
                                       MaSP = sp.MaSP,
                                       TenSP = sp.TenSP,
                                       NgayNhap = sp.Ngaynhap,
                                       TenLoai = loai.TenLoai
                                   }).ToList();

                bindingSource.DataSource = sanphamList;
                dgvSanPham.DataSource = bindingSource;

                dgvSanPham.Columns["colMasp"].DataPropertyName = "MaSP";
                dgvSanPham.Columns["colTenSp"].DataPropertyName = "TenSP";
                dgvSanPham.Columns["colDate"].DataPropertyName = "NgayNhap";
                dgvSanPham.Columns["colLoaisp"].DataPropertyName = "TenLoai";
            }
        }

        private void LoadLoaiSP()
        {
            using (var context = new SanPhamModel())
            {
                var loaiSPList = context.LoaiSPs.ToList();

                cmbLoai.DataSource = loaiSPList;
                cmbLoai.DisplayMember = "TenLoai";
                cmbLoai.ValueMember = "MaLoai";
            }
        }

        private void btnThem_Click(object sender, EventArgs e)
        {
            using (var context = new SanPhamModel())
            {
                if (string.IsNullOrEmpty(txtMasp.Text) ||
                    string.IsNullOrEmpty(txtTenSp.Text) ||
                    cmbLoai.SelectedItem == null)
                {
                    MessageBox.Show("Vui lòng điền đầy đủ thông tin.", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                    return;
                }

                var sanPhamMoi = new Sanpham
                {
                    MaSP = txtMasp.Text.Trim(),
                    TenSP = txtTenSp.Text.Trim(),
                    Ngaynhap = dateNgayNhap.Value,
                    MaLoai = cmbLoai.SelectedValue.ToString()
                };

                context.Sanphams.Add(sanPhamMoi);
                context.SaveChanges();

                LoadData();
                MessageBox.Show("Thêm sản phẩm thành công!", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Information);
                ResetInputFields();
            }
        }

        private void ResetInputFields()
        {
            txtMasp.Clear();
            txtTenSp.Clear();
            cmbLoai.SelectedIndex = -1;
            dateNgayNhap.Value = DateTime.Now;
        }


        private void btnSua_Click_1(object sender, EventArgs e)
        {
            using (var context = new SanPhamModel())
            {
                if (string.IsNullOrEmpty(txtMasp.Text))
                {
                    MessageBox.Show("Vui lòng chọn sản phẩm để sửa.", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                    return;
                }

                var sanPham = context.Sanphams.Find(txtMasp.Text);
                if (sanPham != null)
                {
                    sanPham.TenSP = txtTenSp.Text.Trim();
                    sanPham.Ngaynhap = dateNgayNhap.Value;
                    sanPham.MaLoai = cmbLoai.SelectedValue.ToString();

                    context.SaveChanges();
                    LoadData();

                    MessageBox.Show("Cập nhật sản phẩm thành công!", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Information);
                    ResetInputFields();
                }
                else
                {
                    MessageBox.Show("Sản phẩm không tồn tại!", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                }
            }
        }

        private void btnXoa_Click_1(object sender, EventArgs e)
        {
            using (var context = new SanPhamModel())
            {
                if (string.IsNullOrEmpty(txtMasp.Text))
                {
                    MessageBox.Show("Vui lòng chọn sản phẩm để xóa.", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                    return;
                }

                // Hiển thị hộp thoại xác nhận trước khi xóa
                var result = MessageBox.Show("Bạn có chắc chắn muốn xóa sản phẩm này không?",
                                               "Xác nhận xóa",
                                               MessageBoxButtons.YesNo,
                                               MessageBoxIcon.Question);
                if (result == DialogResult.No)
                {
                    return; // Nếu người dùng chọn 'No', thoát khỏi phương thức
                }

                var sanPham = context.Sanphams.Find(txtMasp.Text);
                if (sanPham != null)
                {
                    context.Sanphams.Remove(sanPham);
                    context.SaveChanges();
                    LoadData();

                    MessageBox.Show("Xóa sản phẩm thành công!", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Information);
                    ResetInputFields();
                }
                else
                {
                    MessageBox.Show("Sản phẩm không tồn tại!", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                }
            }
        }

        private void dgvSanPham_CellContentClick(object sender, DataGridViewCellEventArgs e)
        {

        }

        private void dgvSanPham_CellClick_1(object sender, DataGridViewCellEventArgs e)
        {
            if (e.RowIndex >= 0)
            {
                var row = dgvSanPham.Rows[e.RowIndex];
                txtMasp.Text = row.Cells["colMasp"].Value.ToString();
                txtTenSp.Text = row.Cells["colTenSp"].Value.ToString();
                dateNgayNhap.Value = Convert.ToDateTime(row.Cells["colDate"].Value);
                cmbLoai.SelectedValue = row.Cells["colLoaisp"].Value.ToString();
            }
        }

        private void btnThoat_Click(object sender, EventArgs e)
        {
            var result = MessageBox.Show("Bạn có muốn thoát không?", "Xác nhận thoát", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
            if (result == DialogResult.Yes)
            {
                this.Close(); // Đóng form
            }
        }

        private void label1_Click(object sender, EventArgs e)
        {

        }


        //Vui Long Tim Theo LoaiSp
        private void btnTim_Click(object sender, EventArgs e)
        {
            string loaiSp = txtTim.Text.Trim();
            if (string.IsNullOrEmpty(loaiSp))
            {
                MessageBox.Show("Vui lòng nhập thông tin loại sản phẩm.", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                return;
            }

            using (var context = new SanPhamModel())
            {
                var sanphamList = (from sp in context.Sanphams
                                   join loai in context.LoaiSPs on sp.MaLoai equals loai.MaLoai
                                   where loai.TenLoai.Contains(loaiSp)
                                   select new
                                   {
                                       MaSP = sp.MaSP,
                                       TenSP = sp.TenSP,
                                       NgayNhap = sp.Ngaynhap,
                                       TenLoai = loai.TenLoai
                                   }).ToList();

                bindingSource.DataSource = sanphamList;
                dgvSanPham.DataSource = bindingSource;
            }
        }
    }
}
